import{o as n,c as s,d as a}from"./app.d80ff392.js";const e='{"title":"Radiate\\\\Routing\\\\UrlGenerator","description":"","frontmatter":{},"headers":[{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"$request","slug":"request"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"__construct","slug":"construct"},{"level":3,"title":"current","slug":"current"},{"level":3,"title":"full","slug":"full"},{"level":3,"title":"previous","slug":"previous"}],"relativePath":"api/routing/url-generator.md","lastUpdated":1630007803013}',t={},p=a('<h1 id="radiate-routing-urlgenerator"><a class="header-anchor" href="#radiate-routing-urlgenerator" aria-hidden="true">#</a> Radiate\\Routing\\UrlGenerator</h1><h2 id="properties"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="request"><a class="header-anchor" href="#request" aria-hidden="true">#</a> <code>$request</code></h3><p>The request instance</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Radiate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span> <span class="token variable">$request</span>\n</code></pre></div><h2 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="construct"><a class="header-anchor" href="#construct" aria-hidden="true">#</a> <code>__construct</code></h3><p>Assign the request object to the instance.</p><p>Sets an instance of <a href="/api/routing/url-generator.html">Radiate\\Http\\Request</a></p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Radiate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n</code></pre></div><h4 id="properties-2"><a class="header-anchor" href="#properties-2" aria-hidden="true">#</a> Properties</h4><ul><li><code>$request</code> The request object</li></ul><h3 id="current"><a class="header-anchor" href="#current" aria-hidden="true">#</a> <code>current</code></h3><p>Get the current URL without query parameters.</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><h3 id="full"><a class="header-anchor" href="#full" aria-hidden="true">#</a> <code>full</code></h3><p>Get the current URL including query parameters.</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">full</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><h3 id="previous"><a class="header-anchor" href="#previous" aria-hidden="true">#</a> <code>previous</code></h3><p>Get the URL for the previous request.</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">previous</span><span class="token punctuation">(</span><span class="token keyword type-declaration">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$fallback</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><h4 id="properties-3"><a class="header-anchor" href="#properties-3" aria-hidden="true">#</a> Properties</h4><ul><li><code>$fallback</code> The fallback URL</li></ul><hr><div class="language-php"><pre><code><span class="token comment">/**\n * Return the registration URL\n *\n * @param string $redirect The Redirect URL\n * @return string\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$redirect</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Return the login URL\n *\n * @param string $redirect The redirect URL\n * @return string\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$redirect</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Return the logout URL\n *\n * @param string $redirect The redirect URL\n * @return string\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">logout</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$redirect</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Return the home URL\n *\n * @param string $path The path to append to the home URL\n * @return string\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">home</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Return the URL to the path specified\n *\n * @param string $path The path to append to the home URL\n * @return string\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">to</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Redirect to another page, with an optional status code\n *\n * @param string  $url    The URL to redirect to\n * @param integer $status The status code to send\n * @return void\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">redirect</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$status</span> <span class="token operator">=</span> <span class="token number">302</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Return the admin URL\n *\n * @param string $path The path to append to the admin URL\n * @return string\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">admin</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Return the ajax URL\n *\n * @param string $action The ajax action\n * @return string\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">ajax</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$action</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Return the REST URL\n *\n * @param string $path The path to append to the admin URL\n * @return string\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">rest</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><div class="language-php"><pre><code><span class="token comment">/**\n * Determine if the given path is a valid URL.\n *\n * @param  string  $path\n * @return bool\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">isValidUrl</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>\n</code></pre></div>',34);t.render=function(a,e,t,o,r,c){return n(),s("div",null,[p])};export default t;export{e as __pageData};
