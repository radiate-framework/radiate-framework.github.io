import{r as a,o as s,c as e,a as n,w as t,d as o,b as i}from"./app.d80ff392.js";const p='{"title":"Configuration","description":"","frontmatter":{},"headers":[{"level":2,"title":"Introduction","slug":"introduction"},{"level":2,"title":"Middleware","slug":"middleware"},{"level":2,"title":"Service Providers","slug":"service-providers"},{"level":3,"title":"Core Services","slug":"core-services"},{"level":3,"title":"Additional Services","slug":"additional-services"}],"relativePath":"docs/getting-started/configuration.md","lastUpdated":1629233737699}',r={},c=o('<h1 id="configuration"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h1><p><div class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#middleware">Middleware</a></li><li><a href="#service-providers">Service Providers</a><ul><li><a href="#core-services">Core Services</a></li><li><a href="#additional-services">Additional Services</a></li></ul></li></ul></div></p><h2 id="introduction"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Radiate was built with simplicity in mind so, to that end, there is no initial configuration required. If you want to customise the services provided, or the middleware used, the <code>functions.php</code> file is the place to head to.</p>',4),l=n("p",null,[i("The "),n("code",null,"functions.php"),i(" file acts as the entry point to your application, whether that's a theme or a plugin.")],-1),u=o('<h2 id="middleware"><a class="header-anchor" href="#middleware" aria-hidden="true">#</a> Middleware</h2><h2 id="service-providers"><a class="header-anchor" href="#service-providers" aria-hidden="true">#</a> Service Providers</h2><h3 id="core-services"><a class="header-anchor" href="#core-services" aria-hidden="true">#</a> Core Services</h3><p>Radiate has a few core services that are required to run:</p><ul><li>ConsoleServiceProvider</li><li>EventServiceProvider</li><li>FilesystemServiceProvider</li></ul><p>The great thing is they are also available for you to use throughout your theme or plugin.</p><h3 id="additional-services"><a class="header-anchor" href="#additional-services" aria-hidden="true">#</a> Additional Services</h3><p>Radiate comes bundled with some useful and commonly used services such as authentication, mailing, and routing.</p><p>These services are registered in the theme or plugin <code>function.php</code> file.</p><p>not required so if you don&#39;t need them, or prefer another implementation, feel free to remove them from the <code>functions.php</code> file.</p><div class="language-php"><pre><code><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Radiate<span class="token punctuation">\\</span>Auth<span class="token punctuation">\\</span>AuthServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Radiate<span class="token punctuation">\\</span>Mail<span class="token punctuation">\\</span>MailServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Radiate<span class="token punctuation">\\</span>Routing<span class="token punctuation">\\</span>RoutingServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Radiate<span class="token punctuation">\\</span>View<span class="token punctuation">\\</span>ViewServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Theme<span class="token punctuation">\\</span>Providers<span class="token punctuation">\\</span>EventServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context">Theme<span class="token punctuation">\\</span>Providers<span class="token punctuation">\\</span>RouteServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',11);r.render=function(o,i,p,r,d,h){const v=a("AppNotice");return s(),e("div",null,[c,n(v,{type:"info"},{default:t((()=>[l])),_:1}),u])};export default r;export{p as __pageData};
