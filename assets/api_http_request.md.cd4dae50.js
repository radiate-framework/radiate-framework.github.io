import{o as e,c as a,d as s}from"./app.d80ff392.js";const n='{"title":"Radiate\\\\Http\\\\Request","description":"","frontmatter":{},"headers":[{"level":2,"title":"Implements","slug":"implements"},{"level":2,"title":"Uses","slug":"uses"},{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"$request","slug":"request"},{"level":3,"title":"$cookies","slug":"cookies"},{"level":3,"title":"$files","slug":"files"},{"level":3,"title":"$server","slug":"server"},{"level":3,"title":"$headers","slug":"headers"},{"level":3,"title":"$userResolver","slug":"userresolver"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"__construct","slug":"construct"},{"level":3,"title":"capture","slug":"capture"},{"level":3,"title":"createFrom","slug":"createfrom"},{"level":3,"title":"server","slug":"server-2"},{"level":3,"title":"header","slug":"header"},{"level":3,"title":"isMethod","slug":"ismethod"},{"level":3,"title":"method","slug":"method"},{"level":3,"title":"realMethod","slug":"realmethod"},{"level":3,"title":"merge","slug":"merge"},{"level":3,"title":"ajax","slug":"ajax"},{"level":3,"title":"wantsJson","slug":"wantsjson"},{"level":3,"title":"expectsJson","slug":"expectsjson"},{"level":3,"title":"has","slug":"has"},{"level":3,"title":"get","slug":"get"},{"level":3,"title":"add","slug":"add"},{"level":3,"title":"remove","slug":"remove"},{"level":3,"title":"user","slug":"user"},{"level":3,"title":"setUserResolver","slug":"setuserresolver"},{"level":3,"title":"getUserResolver","slug":"getuserresolver"},{"level":3,"title":"all","slug":"all"},{"level":3,"title":"toArray","slug":"toarray"},{"level":3,"title":"toJson","slug":"tojson"},{"level":3,"title":"__toString","slug":"tostring"},{"level":3,"title":"__isset","slug":"isset"},{"level":3,"title":"__get","slug":"get-2"},{"level":3,"title":"__set","slug":"set"}],"relativePath":"api/http/request.md","lastUpdated":1629233737695}',t={},p=s('<h1 id="radiate-http-request"><a class="header-anchor" href="#radiate-http-request" aria-hidden="true">#</a> Radiate\\Http\\Request</h1><h2 id="implements"><a class="header-anchor" href="#implements" aria-hidden="true">#</a> Implements</h2><ul><li><a href="https://www.php.net/manual/en/class.arrayaccess.php" target="_blank" rel="noopener noreferrer">ArrayAccess</a></li><li><a href="https://www.php.net/manual/en/class.jsonserializable.php" target="_blank" rel="noopener noreferrer">JsonSerializable</a></li></ul><h2 id="uses"><a class="header-anchor" href="#uses" aria-hidden="true">#</a> Uses</h2><ul><li><a href="/api/support/traits/macroable.html">Radiate\\Support\\Traits\\Macroable</a></li></ul><h2 id="properties"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="request"><a class="header-anchor" href="#request" aria-hidden="true">#</a> <code>$request</code></h3><p>The request attributes</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$request</span>\n</code></pre></div><h3 id="cookies"><a class="header-anchor" href="#cookies" aria-hidden="true">#</a> <code>$cookies</code></h3><p>The cookie attributes</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$cookies</span>\n</code></pre></div><h3 id="files"><a class="header-anchor" href="#files" aria-hidden="true">#</a> <code>$files</code></h3><p>The file attributes</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$files</span>\n</code></pre></div><h3 id="server"><a class="header-anchor" href="#server" aria-hidden="true">#</a> <code>$server</code></h3><p>The server attributes</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$server</span>\n</code></pre></div><h3 id="headers"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> <code>$headers</code></h3><p>The header attributes</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$headers</span>\n</code></pre></div><h3 id="userresolver"><a class="header-anchor" href="#userresolver" aria-hidden="true">#</a> <code>$userResolver</code></h3><p>The user resolver</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Closure</span> <span class="token variable">$userResolver</span>\n</code></pre></div><h2 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="construct"><a class="header-anchor" href="#construct" aria-hidden="true">#</a> <code>__construct</code></h3><p>Create the request instance</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$cookies</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$server</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n</code></pre></div><h4 id="properties-2"><a class="header-anchor" href="#properties-2" aria-hidden="true">#</a> Properties</h4><ul><li><code>$request</code> Usually the global <code>$_REQUEST</code> array</li><li><code>$cookies</code> Usually the global <code>$_COOKIE</code> array</li><li><code>$files</code> Usually the global <code>$_FILES</code> array</li><li><code>$server</code> Usually the global <code>$_SERVER</code> array</li></ul><h3 id="capture"><a class="header-anchor" href="#capture" aria-hidden="true">#</a> <code>capture</code></h3><p>Capture the global request</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">capture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Request</span>\n</code></pre></div><h3 id="createfrom"><a class="header-anchor" href="#createfrom" aria-hidden="true">#</a> <code>createFrom</code></h3><p>Create a new request from this one</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">createFrom</span><span class="token punctuation">(</span><span class="token keyword type-hint">self</span> <span class="token variable">$from</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$to</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Request</span>\n</code></pre></div><h4 id="properties-3"><a class="header-anchor" href="#properties-3" aria-hidden="true">#</a> Properties</h4><ul><li><code>$from</code> The request to create from</li><li><code>$to</code> The request to create to</li></ul><h3 id="server-2"><a class="header-anchor" href="#server-2" aria-hidden="true">#</a> <code>server</code></h3><p>Get a server attribute</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">server</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$default</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>\n</code></pre></div><h4 id="properties-4"><a class="header-anchor" href="#properties-4" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key of the server entry to return</li><li><code>$default</code> The fallback if the entry doesn&#39;t exist</li></ul><h3 id="header"><a class="header-anchor" href="#header" aria-hidden="true">#</a> <code>header</code></h3><p>Get a header</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$default</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>\n</code></pre></div><h4 id="properties-5"><a class="header-anchor" href="#properties-5" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key of the header to return</li><li><code>$default</code> The fallback if the header doesn&#39;t exist</li></ul><h3 id="ismethod"><a class="header-anchor" href="#ismethod" aria-hidden="true">#</a> <code>isMethod</code></h3><p>Determine if the method matches the given method</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">isMethod</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>\n</code></pre></div><h4 id="properties-6"><a class="header-anchor" href="#properties-6" aria-hidden="true">#</a> Properties</h4><ul><li><code>$method</code> The method to check against</li></ul><h3 id="method"><a class="header-anchor" href="#method" aria-hidden="true">#</a> <code>method</code></h3><p>Get the intended method</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><h3 id="realmethod"><a class="header-anchor" href="#realmethod" aria-hidden="true">#</a> <code>realMethod</code></h3><p>Get the real request method</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">realMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><h3 id="merge"><a class="header-anchor" href="#merge" aria-hidden="true">#</a> <code>merge</code></h3><p>Merge the attributes into the request</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$attributes</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">self</span>\n</code></pre></div><h4 id="properties-7"><a class="header-anchor" href="#properties-7" aria-hidden="true">#</a> Properties</h4><ul><li><code>$attributes</code> The attributes to merge into the request</li></ul><h3 id="ajax"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> <code>ajax</code></h3><p>Determine if the request was made with AJAX</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>\n</code></pre></div><h3 id="wantsjson"><a class="header-anchor" href="#wantsjson" aria-hidden="true">#</a> <code>wantsJson</code></h3><p>Determine if the request can accept a JSON response</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">wantsJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>\n</code></pre></div><h3 id="expectsjson"><a class="header-anchor" href="#expectsjson" aria-hidden="true">#</a> <code>expectsJson</code></h3><p>Determine if the request expects a JSON response</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">expectsJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>\n</code></pre></div><h3 id="has"><a class="header-anchor" href="#has" aria-hidden="true">#</a> <code>has</code></h3><p>Determine if the attribute exists</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>\n</code></pre></div><h4 id="properties-8"><a class="header-anchor" href="#properties-8" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key to check on the request</li></ul><h3 id="get"><a class="header-anchor" href="#get" aria-hidden="true">#</a> <code>get</code></h3><p>Get an attribute or fallback</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$default</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>\n</code></pre></div><h4 id="properties-9"><a class="header-anchor" href="#properties-9" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key to get</li><li><code>$key</code> The fallback if the entry doesn&#39;t exist</li></ul><h3 id="add"><a class="header-anchor" href="#add" aria-hidden="true">#</a> <code>add</code></h3><p>Add an attribute to the request</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n</code></pre></div><h4 id="properties-10"><a class="header-anchor" href="#properties-10" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key to add</li><li><code>$value</code> The value to set in the request</li></ul><h3 id="remove"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> <code>remove</code></h3><p>Remove the attribute from the request</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n</code></pre></div><h4 id="properties-11"><a class="header-anchor" href="#properties-11" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key to remove</li></ul><h3 id="user"><a class="header-anchor" href="#user" aria-hidden="true">#</a> <code>user</code></h3><p>Get the request user</p><p>See the <a href="/api/auth/auth-manager.html#user">AuthManager</a> class for more information</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>WP_User</span><span class="token operator">|</span><span class="token keyword type-declaration">false</span>\n</code></pre></div><h3 id="setuserresolver"><a class="header-anchor" href="#setuserresolver" aria-hidden="true">#</a> <code>setUserResolver</code></h3><p>Set the user resolver</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">setUserResolver</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Closure</span> <span class="token variable">$resolver</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">self</span>\n</code></pre></div><h4 id="properties-12"><a class="header-anchor" href="#properties-12" aria-hidden="true">#</a> Properties</h4><ul><li><code>$resolver</code> The user resolver</li></ul><h3 id="getuserresolver"><a class="header-anchor" href="#getuserresolver" aria-hidden="true">#</a> <code>getUserResolver</code></h3><p>Set the user resolver</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getUserResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name class-name-fully-qualified return-type"><span class="token punctuation">\\</span>Closure</span>\n</code></pre></div><h3 id="all"><a class="header-anchor" href="#all" aria-hidden="true">#</a> <code>all</code></h3><p>Return the object as an array</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>\n</code></pre></div><h3 id="toarray"><a class="header-anchor" href="#toarray" aria-hidden="true">#</a> <code>toArray</code></h3><p>Return the object as an array</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>\n</code></pre></div><h3 id="tojson"><a class="header-anchor" href="#tojson" aria-hidden="true">#</a> <code>toJson</code></h3><p>Return the object as a json string</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><h3 id="tostring"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> <code>__toString</code></h3><p>Return the object as a json string</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><h3 id="isset"><a class="header-anchor" href="#isset" aria-hidden="true">#</a> <code>__isset</code></h3><p>Determine if the attribute exists</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__isset</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>\n</code></pre></div><h4 id="properties-13"><a class="header-anchor" href="#properties-13" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key to check on the request</li></ul><h3 id="get-2"><a class="header-anchor" href="#get-2" aria-hidden="true">#</a> <code>__get</code></h3><p>Get an attribute</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>\n</code></pre></div><h4 id="properties-14"><a class="header-anchor" href="#properties-14" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key to get</li></ul><h3 id="set"><a class="header-anchor" href="#set" aria-hidden="true">#</a> <code>__set</code></h3><p>Add an attribute to the request</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__set</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n</code></pre></div><h4 id="properties-15"><a class="header-anchor" href="#properties-15" aria-hidden="true">#</a> Properties</h4><ul><li><code>$key</code> The key to set</li><li><code>$value</code> The value to set</li></ul>',132);t.render=function(s,n,t,o,r,c){return e(),a("div",null,[p])};export default t;export{n as __pageData};
