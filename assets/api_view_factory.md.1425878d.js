import{o as a,c as e,d as n}from"./app.d80ff392.js";const s='{"title":"Radiate\\\\View\\\\Factory","description":"","frontmatter":{},"headers":[{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"$finder","slug":"finder"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"__construct","slug":"construct"},{"level":3,"title":"make","slug":"make"},{"level":3,"title":"viewInstance","slug":"viewinstance"},{"level":3,"title":"normalizeName","slug":"normalizename"}],"relativePath":"api/view/factory.md","lastUpdated":1630007803013}',t={},p=n('<h1 id="radiate-view-factory"><a class="header-anchor" href="#radiate-view-factory" aria-hidden="true">#</a> Radiate\\View\\Factory</h1><h2 id="properties"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="finder"><a class="header-anchor" href="#finder" aria-hidden="true">#</a> <code>$finder</code></h3><p>The file finder</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Radiate<span class="token punctuation">\\</span>View<span class="token punctuation">\\</span>Finder</span> <span class="token variable">$finder</span>\n</code></pre></div><h2 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="construct"><a class="header-anchor" href="#construct" aria-hidden="true">#</a> <code>__construct</code></h3><p>Create the factory</p><p>Sets an instance of <a href="/api/view/finder.html">Radiate\\View\\Finder</a></p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Radiate<span class="token punctuation">\\</span>View<span class="token punctuation">\\</span>Finder</span> <span class="token variable">$finder</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n</code></pre></div><h4 id="properties-2"><a class="header-anchor" href="#properties-2" aria-hidden="true">#</a> Properties</h4><ul><li><code>$finder</code> The view file finder</li></ul><h3 id="make"><a class="header-anchor" href="#make" aria-hidden="true">#</a> <code>make</code></h3><p>Make a view.</p><p>Returns an instance of <a href="/api/view/view.html">Radiate\\View\\View</a></p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">make</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$view</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name class-name-fully-qualified return-type"><span class="token punctuation">\\</span>Radiate<span class="token punctuation">\\</span>View<span class="token punctuation">\\</span>View</span>\n</code></pre></div><h4 id="properties-3"><a class="header-anchor" href="#properties-3" aria-hidden="true">#</a> Properties</h4><ul><li><code>$view</code> The view</li><li><code>$data</code> The data to pass to the view</li></ul><h3 id="viewinstance"><a class="header-anchor" href="#viewinstance" aria-hidden="true">#</a> <code>viewInstance</code></h3><p>Create a new view instance from the given arguments.</p><p>Returns an instance of <a href="/api/view/view.html">Radiate\\View\\View</a></p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">viewInstance</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$view</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$path</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name class-name-fully-qualified return-type"><span class="token punctuation">\\</span>Radiate<span class="token punctuation">\\</span>View<span class="token punctuation">\\</span>View</span>\n</code></pre></div><h4 id="properties-4"><a class="header-anchor" href="#properties-4" aria-hidden="true">#</a> Properties</h4><ul><li><code>$view</code> The view</li><li><code>$path</code> The view path</li><li><code>$data</code> The data to pass to the view</li></ul><h3 id="normalizename"><a class="header-anchor" href="#normalizename" aria-hidden="true">#</a> <code>normalizeName</code></h3><p>Normalize the name (replace dot notation for slashes).</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">normalizeName</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>\n</code></pre></div><h4 id="properties-5"><a class="header-anchor" href="#properties-5" aria-hidden="true">#</a> Properties</h4><ul><li><code>$path</code> The path to normalize</li></ul>',29);t.render=function(n,s,t,i,o,c){return a(),e("div",null,[p])};export default t;export{s as __pageData};
