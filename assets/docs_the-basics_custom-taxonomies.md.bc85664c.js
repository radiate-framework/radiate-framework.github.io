import{r as e,o as n,c as a,a as s,w as o,d as t,b as p}from"./app.d80ff392.js";const r='{"title":"Custom Taxonomies","description":"","frontmatter":{},"headers":[{"level":2,"title":"Introduction","slug":"introduction"},{"level":2,"title":"Creating A Taxonomy","slug":"creating-a-taxonomy"},{"level":3,"title":"Taxonomy Options","slug":"taxonomy-options"},{"level":3,"title":"Taxonomy Labels","slug":"taxonomy-labels"},{"level":3,"title":"Registering Taxonomies","slug":"registering-taxonomies"},{"level":2,"title":"Reserved Taxonomies","slug":"reserved-taxonomies"},{"level":3,"title":"Special Taxonomies","slug":"special-taxonomies"},{"level":3,"title":"Blocked Taxonomies","slug":"blocked-taxonomies"}],"relativePath":"docs/the-basics/custom-taxonomies.md","lastUpdated":1629233737699}',l={},i=t('<h1 id="custom-taxonomies"><a class="header-anchor" href="#custom-taxonomies" aria-hidden="true">#</a> Custom Taxonomies</h1><p><div class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#creating-a-taxonomy">Creating A Taxonomy</a><ul><li><a href="#taxonomy-options">Taxonomy Options</a></li><li><a href="#taxonomy-labels">Taxonomy Labels</a></li><li><a href="#registering-taxonomies">Registering Taxonomies</a></li></ul></li><li><a href="#reserved-taxonomies">Reserved Taxonomies</a><ul><li><a href="#special-taxonomies">Special Taxonomies</a></li><li><a href="#blocked-taxonomies">Blocked Taxonomies</a></li></ul></li></ul></div></p><h2 id="introduction"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Post types are a great way to define content, and taxonomies are a great way to categorize it. WordPress posts have <em>categories</em> and <em>tags</em> - these are both taxonomies.</p><p>Taxonomies and terms are often confused. The simplest way to understand the difference is with an example:</p><blockquote><p><em>Action</em>, <em>comedy</em> and <em>horror</em> are all <em>terms</em>. These terms are all genres, so the <em>taxonomy</em> is <em>genre</em>.</p></blockquote><p>The Radiate <code>cli</code> can create custom taxonomies ready to be defined on your post types.</p><p>Following on from the previous chapter <a href="./custom-post-types.html">Custom Post Types</a>, we will make a <code>Genre</code> taxonomy for our <code>Film</code> post type.</p><h2 id="creating-a-taxonomy"><a class="header-anchor" href="#creating-a-taxonomy" aria-hidden="true">#</a> Creating A Taxonomy</h2><p>To get started, we&#39;ll use <code>make:taxonomy</code> to create a genre taxonomy. The <code>Taxonomy</code> name should be in the singular form for example <strong>Genre</strong> not <strong>Genres</strong>.</p><div class="language-"><pre><code>wp radiate make:taxonomy Genre\n</code></pre></div>',11),c=s("p",null,[p("Remember to use "),s("em",null,"StudlyCase"),p(" for your taxonomy names. The name will be automatically transformed to "),s("em",null,"snake_case"),p(".")],-1),d=t('<p>Radiate will generate a <code>Genre</code> taxonomy in your <code>app/WordPress/Taxonomies</code> directory.</p><div class="language-php"><pre><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">Theme<span class="token punctuation">\\</span>WordPress<span class="token punctuation">\\</span>Taxonomies</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Radiate<span class="token punctuation">\\</span>WordPress<span class="token punctuation">\\</span>Taxonomy</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Genre</span> <span class="token keyword">extends</span> <span class="token class-name">Taxonomy</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">/**\n     * The name\n     *\n     * @var string\n     */</span>\n    <span class="token keyword">protected</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;genre&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * The singular label\n     *\n     * @var string\n     */</span>\n    <span class="token keyword">protected</span> <span class="token variable">$singular</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Genre&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * The plural label\n     *\n     * @var string\n     */</span>\n    <span class="token keyword">protected</span> <span class="token variable">$plural</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Genres&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * The options\n     *\n     * @var array\n     */</span>\n    <span class="token keyword">protected</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string single-quoted-string">&#39;public&#39;</span>            <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;hierarchical&#39;</span>      <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;show_admin_column&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;show_in_rest&#39;</span>      <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></code></pre></div><h3 id="taxonomy-options"><a class="header-anchor" href="#taxonomy-options" aria-hidden="true">#</a> Taxonomy Options</h3><p>The taxonomy options are an array of properties for the <code>Taxonomy</code> for example, <code>hierarchical</code> determines if a term can have parent/child relationships to other terms.</p><p>The different arguments accepted are well documented in the <a href="https://developer.wordpress.org/reference/functions/register_taxonomy/" target="_blank" rel="noopener noreferrer">WordPress documentation</a></p><h3 id="taxonomy-labels"><a class="header-anchor" href="#taxonomy-labels" aria-hidden="true">#</a> Taxonomy Labels</h3><p>One pain point of creating taxonomies the standard WordPress way is the many labels that tend to require the same string-replace treatment. I.e. <em>Add New Genre</em>, <em>Add New Subject</em>, <em>Add New Country</em>.</p><p>Radiate makes handling labels a breeze. In your <code>Taxonomy</code> class, the <code>$singular</code> and <code>$plural</code> names are determined for you. These labels are then inserted in the required places so you don&#39;t have to.</p><p>If you do want to specify your own labels, you can add a <code>labels</code> method to the <code>Taxonomy</code> and return an array of your own options.</p><div class="language-php"><pre><code><span class="token comment">/**\n * Return the taxonomy labels\n *\n * @return array\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">labels</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span>\n        <span class="token string single-quoted-string">&#39;choose_from_most_used&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Choose From The Most Watched Genres&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;not_found&#39;</span>             <span class="token operator">=&gt;</span> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;No Film Genres Found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',10),u=s("p",null,"Labels are intelligently merged with Radiate's defaults so you can define as many or as few as you like and the rest will be taken care of.",-1),m=t('<h3 id="registering-taxonomies"><a class="header-anchor" href="#registering-taxonomies" aria-hidden="true">#</a> Registering Taxonomies</h3><p>To register a taxonomy, they must be associated with a post type. To do this, you can add your <code>Taxonomy</code> classname to the <code>$taxonomies</code> array in your <code>PostType</code> class.</p><p>You can register as many taxonomies on a post type as you need, and you can also register the same taxonomy on multiple post types!</p><div class="language-php"><pre><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">Theme<span class="token punctuation">\\</span>WordPress<span class="token punctuation">\\</span>PostTypes</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Radiate<span class="token punctuation">\\</span>WordPress<span class="token punctuation">\\</span>PostType</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Theme<span class="token punctuation">\\</span>WordPress<span class="token punctuation">\\</span>Taxonomies<span class="token punctuation">\\</span>Genre</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Film</span> <span class="token keyword">extends</span> <span class="token class-name">PostType</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">/**\n     * The taxonomies\n     *\n     * @var array\n     */</span>\n    <span class="token keyword">protected</span> <span class="token variable">$taxonomies</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token class-name static-context">Genre</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></code></pre></div><h2 id="reserved-taxonomies"><a class="header-anchor" href="#reserved-taxonomies" aria-hidden="true">#</a> Reserved Taxonomies</h2><p>WordPress has some reserved taxonomies that you shouldn&#39;t override. <code>make:taxonomy</code> determines if the <code>Taxonomy</code> you attempted to create is reserved.</p><h3 id="special-taxonomies"><a class="header-anchor" href="#special-taxonomies" aria-hidden="true">#</a> Special Taxonomies</h3><p>Some reserved taxonomies have been deemed &quot;special&quot; and may be extended with <a href="./custom-post-types.html">custom post types</a> in the usual way. When using <code>make:taxonomy</code> on one of these reserved taxonomies, the <code>Taxonomy</code> will be generated with a slimmed down class.</p><ul><li>category</li><li>post_tag</li></ul><h3 id="blocked-taxonomies"><a class="header-anchor" href="#blocked-taxonomies" aria-hidden="true">#</a> Blocked Taxonomies</h3><p>Taxonomies attempting to use reserved words cannot be generated using <code>make:taxonomy</code>, returning an error in the console instead.</p><p>Here are a few examples of the reserved words:</p><ul><li>author</li><li>fields</li><li>name</li><li>pagename</li><li>post_status</li><li>post_type</li><li>subpost</li><li>tag</li><li>taxonomy</li><li>term</li><li>type</li></ul><p>The full list of <a href="https://developer.wordpress.org/reference/functions/register_taxonomy/#reserved-terms" target="_blank" rel="noopener noreferrer">reserved words</a> is extensive and most of them are unlikely choices for a taxonomy name anyway.</p>',14);l.render=function(t,p,r,l,k,h){const g=e("AppNotice");return n(),a("div",null,[i,s(g,{type:"info"},{default:o((()=>[c])),_:1}),d,s(g,{type:"info"},{default:o((()=>[u])),_:1}),m])};export default l;export{r as __pageData};
