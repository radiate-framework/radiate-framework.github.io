import{r as e,o as t,c as a,a as i,w as n,d as l,b as o}from"./app.d80ff392.js";const r='{"title":"Installation","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installing the Theme","slug":"installing-the-theme"},{"level":2,"title":"Installing the Plugin","slug":"installing-the-plugin"}],"relativePath":"docs/getting-started/installation.md","lastUpdated":1629233737699}',s={},h=l('<h1 id="installation"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><p>The Radiate framework can be used in either a theme or a plugin. The framework for both is the same to make it easy to achieve the same things in both.</p><p>Radiate utilizes <code>composer</code> for installation of the theme or plugin, and class autoloading.</p><h2 id="installing-the-theme"><a class="header-anchor" href="#installing-the-theme" aria-hidden="true">#</a> Installing the Theme</h2><p>If you are building a theme, navigate to the themes directory of your project:</p><div class="language-"><pre><code>composer create-project radiate/theme theme-name\n</code></pre></div><h2 id="installing-the-plugin"><a class="header-anchor" href="#installing-the-plugin" aria-hidden="true">#</a> Installing the Plugin</h2><p>If you&#39;re building a plugin, navigate to the plugins directory and run:</p><div class="language-"><pre><code>composer create-project radiate/plugin plugin-name\n</code></pre></div>',9),d=i("p",null,[o("Running a Radiate theme and plugin at the same time will cause unexpected behaviour. It is recommended to use only one per project or to use "),i("code",null,"mozart"),o(" or "),i("code",null,"php-scoper"),o(" to prefix your namespaces.")],-1);s.render=function(l,o,r,s,p,u){const c=e("AppNotice");return t(),a("div",null,[h,i(c,{type:"warning"},{default:n((()=>[d])),_:1})])};export default s;export{r as __pageData};
